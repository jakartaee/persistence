<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2024 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.ee4j</groupId>
        <artifactId>project</artifactId>
        <version>1.0.9</version>
        <relativePath/>
    </parent>

    <groupId>jakarta.tck</groupId>
    <artifactId>persistence-tck-runner</artifactId>
    <version>3.2.0</version>
    <packaging>pom</packaging>

    <properties>
        <!--glassfish properties-->
        <jakarta.ee.version>11.0.0-RC4</jakarta.ee.version>
        <glassfish.version>8.0.0-M2</glassfish.version>
        <glassfish.toplevel.dir>${project.build.directory}/glassfish8</glassfish.toplevel.dir>
        <glassfish.module.dir>${glassfish.toplevel.dir}/glassfish/modules</glassfish.module.dir>
        <exec.asadmin>${glassfish.toplevel.dir}/bin/asadmin</exec.asadmin>
        <!--tck properties-->
        <jpa.classes>${glassfish.module.dir}/jakarta.persistence-api.jar,${glassfish.module.dir}/org.eclipse.persistence.jpa.jar,${glassfish.module.dir}/jakarta.servlet-api.jar,${glassfish.module.dir}/jakarta.transaction-api.jar,${glassfish.module.dir}/jakarta.ejb-api.jar,${glassfish.module.dir}/org.eclipse.persistence.antlr.jar,${glassfish.module.dir}/org.eclipse.persistence.asm.jar,${glassfish.module.dir}/org.eclipse.persistence.core.jar,${glassfish.module.dir}/org.eclipse.persistence.dbws.jar,${glassfish.module.dir}/org.eclipse.persistence.jpa.jpql.jar,${glassfish.module.dir}/org.eclipse.persistence.jpa.modelgen.processor.jar,${glassfish.module.dir}/org.eclipse.persistence.moxy.jar,${glassfish.module.dir}/org.eclipse.persistence.oracle.jar,${glassfish.module.dir}/jboss-logging.jar,${glassfish.module.dir}/jakarta.el-api.jar,${glassfish.module.dir}/expressly.jar,${glassfish.module.dir}/classmate.jar,${glassfish.module.dir}/jakarta.validation-api.jar</jpa.classes>
        <validator.classes>${glassfish.module.dir}/jakarta.validation-api.jar,${glassfish.module.dir}/hibernate-validator-cdi.jar,${glassfish.module.dir}/hibernate-validator.jar</validator.classes>
        <jdbc.lib.classpath>${javadb.lib}/derbyclient.jar,${javadb.lib}/derbyshared.jar,${javadb.lib}/derbytools.jar</jdbc.lib.classpath>
        <jdbc.driver.classes>${javadb.lib}/derbyclient.jar:${javadb.lib}/derbyshared.jar:${javadb.lib}/derbytools.jar</jdbc.driver.classes>
        <jdbc.db>derby</jdbc.db>
        <jakarta.persistence.provider>org.eclipse.persistence.jpa.PersistenceProvider</jakarta.persistence.provider>
        <jakarta.persistence.jdbc.driver>org.apache.derby.jdbc.ClientDriver</jakarta.persistence.jdbc.driver>
        <jakarta.persistence.jdbc.url>jdbc:derby://localhost:1527/derbyDB;create=true</jakarta.persistence.jdbc.url>
        <jakarta.persistence.jdbc.user>cts1</jakarta.persistence.jdbc.user>
        <jakarta.persistence.jdbc.password>cts1</jakarta.persistence.jdbc.password>
        <jpa.provider.implementation.specific.properties/>
        <jpa.provider.implementation.specific.additional.properties/>
        <db.supports.sequence>true</db.supports.sequence>
        <persistence.second.level.caching.supported>true</persistence.second.level.caching.supported>
        <db.delimiter>;</db.delimiter>
        <!--Dependencies version-->
        <tck.common.artifactId>persistence-tck-common</tck.common.artifactId>
        <tck.artifactId>persistence-tck-spec-tests</tck.artifactId>
        <junit.jupiter.version>5.10.2</junit.jupiter.version>
        <jakarta.tck.common.version>11.0.0-RC5</jakarta.tck.common.version>
        <jakarta.jakartaee-bom.version>11.0.0-M5</jakarta.jakartaee-bom.version>
        <persistence.tck.version>3.2.0</persistence.tck.version>
        <arquillian.junit5.version>1.9.1.Final</arquillian.junit5.version>
        <el.version>5.0.0-M1</el.version>
        <hibernate.version>8.0.1.Final</hibernate.version>
        <javadb.lib>${glassfish.toplevel.dir}/javadb/lib</javadb.lib>
        <sql.directory>../sql</sql.directory>
        <persistence.api.version>3.2.0</persistence.api.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <version>3.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.el</artifactId>
            <version>${el.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${tck.common.artifactId}</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>jakarta.persistence</groupId>
                    <artifactId>jakarta.persistence-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${tck.artifactId}</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>jakarta.persistence</groupId>
                    <artifactId>jakarta.persistence-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>common</artifactId>
            <version>${jakarta.ee.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dbprocedures</artifactId>
            <version>${persistence.tck.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>jakarta.persistence</groupId>
                    <artifactId>jakarta.persistence-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
            <version>${arquillian.junit5.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-core</artifactId>
            <version>${arquillian.junit5.version}</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>repo1</id>
            <name>maven repo</name>
            <url>https://repo1.maven.org/maven2/</url>
        </repository>
        <repository>
            <id>repo2</id>
            <name>staging repo</name>
            <url>https://jakarta.oss.sonatype.org/content/repositories/staging</url>
        </repository>
    </repositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>3.2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.glassfish.main.distributions</groupId>
                                    <artifactId>${glassfish-artifact-id}</artifactId>
                                    <version>${glassfish.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-lib</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>dbprocedures</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <destFileName>dbprocedures.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.persistence</groupId>
                                    <artifactId>jakarta.persistence-api</artifactId>
                                    <outputDirectory>${glassfish.module.dir}</outputDirectory>
                                    <overWrite>true</overWrite>
                                    <destFileName>jakarta.persistence-api.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>initdb</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <path id="jdbc.classpath">
                                    <pathelement path="${jdbc.driver.classes}"/>
                                    <path refid="maven.runtime.classpath"/>
                                </path>
                                <sql autocommit="true" classpathref="jdbc.classpath" delimiter="${db.delimiter}" driver="${jakarta.persistence.jdbc.driver}" onerror="continue" password="${jakarta.persistence.jdbc.password}" url="${jakarta.persistence.jdbc.url}" userid="${jakarta.persistence.jdbc.user}">
                                    <transaction src="${sql.directory}/${jdbc.db}/${jdbc.db}.ddl.persistence.sql"/>
                                </sql>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>initdb-sprocs</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <path id="jdbc.classpath">
                                    <pathelement path="${jdbc.driver.classes}"/>
                                    <path refid="maven.runtime.classpath"/>
                                </path>
                                <sql autocommit="true" classpathref="jdbc.classpath" delimiter="${db.delimiter}" driver="${jakarta.persistence.jdbc.driver}" onerror="continue" password="${jakarta.persistence.jdbc.password}" url="${jakarta.persistence.jdbc.url}" userid="${jakarta.persistence.jdbc.user}">
                                    <transaction src="${sql.directory}/${jdbc.db}/${jdbc.db}.ddl.persistence.sprocs.sql"/>
                                </sql>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>persistence-tests-1</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*Client*.*</include>
                                <include>**/*JPASigTest*.*</include>
                            </includes>
                            <test>!**/ee/jakarta/tck/persistence/se/entityManagerFactory/Client2#createEntityManagerFactoryNoBeanValidatorTest</test>
                            <additionalClasspathElements>
                                <additionalClasspathElement>${jpa.classes}</additionalClasspathElement>
                                <additionalClasspathElement>${jdbc.lib.classpath}</additionalClasspathElement>
                                <additionalClasspathElement>${validator.classes}</additionalClasspathElement>
                            </additionalClasspathElements>
                            <dependenciesToScan>${project.groupId}:${tck.artifactId}</dependenciesToScan>
                            <systemPropertyVariables>
                                <GLASSFISH_HOME>${project.build.directory}/${glassfish.toplevel.dir}</GLASSFISH_HOME>
                                <platform.mode>standalone</platform.mode>
                                <persistence.unit.name>JPATCK</persistence.unit.name>
                                <persistence.unit.name.2>JPATCK2</persistence.unit.name.2>
                                <jakarta.persistence.provider>${jakarta.persistence.provider}</jakarta.persistence.provider>
                                <jakarta.persistence.jdbc.driver>${jakarta.persistence.jdbc.driver}</jakarta.persistence.jdbc.driver>
                                <jakarta.persistence.jdbc.url>${jakarta.persistence.jdbc.url}</jakarta.persistence.jdbc.url>
                                <jakarta.persistence.jdbc.user>${jakarta.persistence.jdbc.user}</jakarta.persistence.jdbc.user>
                                <jakarta.persistence.jdbc.password>${jakarta.persistence.jdbc.password}</jakarta.persistence.jdbc.password>
                                <jpa.provider.implementation.specific.properties>${jpa.provider.implementation.specific.properties}</jpa.provider.implementation.specific.properties>
                                <persistence.second.level.caching.supported>${persistence.second.level.caching.supported}</persistence.second.level.caching.supported>
                                <vehicle>standalone</vehicle>
                                <user.dir>/tmp</user.dir>
                                <db.supports.sequence>${db.supports.sequence}</db.supports.sequence>
                                <Insert_Jpa_Purchase_Order>INSERT INTO PURCHASE_ORDER(ID, TOTAL, DESCRIPTION) VALUES(?, ?, null)</Insert_Jpa_Purchase_Order>
                                <Select_Jpa_Purchase_Order>SELECT ID, TOTAL FROM PURCHASE_ORDER WHERE ID=?</Select_Jpa_Purchase_Order>
                                <log.file.location>/tmp</log.file.location>
                                <jdbc.db>${jdbc.db}</jdbc.db>
                                <sigTestClasspath>${glassfish.module.dir}/jakarta.persistence-api.jar${path.separator}${project.build.directory}/jdk11-bundle/java.base${path.separator}${project.build.directory}/jdk11-bundle/java.rmi${path.separator}${project.build.directory}/jdk11-bundle/java.sql${path.separator}${project.build.directory}/jdk11-bundle/java.naming
                                </sigTestClasspath>
                                <jimage.dir>${project.build.directory}/jdk11-bundle</jimage.dir>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>persistence-tests-2</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <test>**/ee/jakarta/tck/persistence/se/entityManagerFactory/Client2#createEntityManagerFactoryNoBeanValidatorTest</test>
                            <additionalClasspathElements>
                                <additionalClasspathElement>${jpa.classes}</additionalClasspathElement>
                                <additionalClasspathElement>${jdbc.lib.classpath}</additionalClasspathElement>
                            </additionalClasspathElements>
                            <dependenciesToScan>${project.groupId}:${tck.artifactId}</dependenciesToScan>
                            <systemPropertyVariables>
                                <GLASSFISH_HOME>${project.build.directory}/${glassfish.toplevel.dir}</GLASSFISH_HOME>
                                <platform.mode>standalone</platform.mode>
                                <persistence.unit.name>JPATCK</persistence.unit.name>
                                <persistence.unit.name.2>JPATCK2</persistence.unit.name.2>
                                <jakarta.persistence.provider>${jakarta.persistence.provider}</jakarta.persistence.provider>
                                <jakarta.persistence.jdbc.driver>${jakarta.persistence.jdbc.driver}</jakarta.persistence.jdbc.driver>
                                <jakarta.persistence.jdbc.url>${jakarta.persistence.jdbc.url}</jakarta.persistence.jdbc.url>
                                <jakarta.persistence.jdbc.user>${jakarta.persistence.jdbc.user}</jakarta.persistence.jdbc.user>
                                <jakarta.persistence.jdbc.password>${jakarta.persistence.jdbc.password}</jakarta.persistence.jdbc.password>
                                <jpa.provider.implementation.specific.properties>${jpa.provider.implementation.specific.properties}</jpa.provider.implementation.specific.properties>
                                <persistence.second.level.caching.supported>${persistence.second.level.caching.supported}</persistence.second.level.caching.supported>
                                <vehicle>standalone</vehicle>
                                <user.dir>/tmp</user.dir>
                                <db.supports.sequence>${db.supports.sequence}</db.supports.sequence>
                                <Insert_Jpa_Purchase_Order>INSERT INTO PURCHASE_ORDER(ID, TOTAL, DESCRIPTION) VALUES(?, ?, null)</Insert_Jpa_Purchase_Order>
                                <Select_Jpa_Purchase_Order>SELECT ID, TOTAL FROM PURCHASE_ORDER WHERE ID=?</Select_Jpa_Purchase_Order>
                                <log.file.location>/tmp</log.file.location>
                                <jdbc.db>${jdbc.db}</jdbc.db>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <configuration>
                    <linkXRef>false</linkXRef>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-failsafe-html-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>failsafe-report-only</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/test-reports</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>full</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <glassfish-artifact-id>glassfish</glassfish-artifact-id>
            </properties>
        </profile>
        <profile>
            <id>web</id>
            <properties>
                <glassfish-artifact-id>web</glassfish-artifact-id>
            </properties>
        </profile>
        <profile>
            <id>eclipselink</id>
            <properties>
                <glassfish-artifact-id>glassfish</glassfish-artifact-id>
                <eclipselink.asm.version>9.7.0</eclipselink.asm.version>
                <eclipselink.version>5.0.0-B01</eclipselink.version>
                <jakarta.persistence.provider>org.eclipse.persistence.jpa.PersistenceProvider</jakarta.persistence.provider>
                <jpa.provider.implementation.specific.properties>eclipselink.logging.level=OFF${jpa.provider.implementation.specific.additional.properties}</jpa.provider.implementation.specific.properties>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.eclipse.persistence</groupId>
                    <artifactId>org.eclipse.persistence.core</artifactId>
                    <version>${eclipselink.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.persistence</groupId>
                    <artifactId>org.eclipse.persistence.jpa</artifactId>
                    <version>${eclipselink.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.persistence</groupId>
                    <artifactId>org.eclipse.persistence.jpa.jpql</artifactId>
                    <version>${eclipselink.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.persistence</groupId>
                    <artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
                    <version>${eclipselink.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.persistence</groupId>
                    <artifactId>org.eclipse.persistence.moxy</artifactId>
                    <version>${eclipselink.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.persistence</groupId>
                    <artifactId>org.eclipse.persistence.dbws</artifactId>
                    <version>${eclipselink.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.persistence</groupId>
                    <artifactId>org.eclipse.persistence.oracle</artifactId>
                    <version>${eclipselink.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.persistence</groupId>
                    <artifactId>org.eclipse.persistence.asm</artifactId>
                    <version>${eclipselink.asm.version}</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-eclipselink-lib</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${glassfish.module.dir}</outputDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.eclipse.persistence</groupId>
                                            <artifactId>org.eclipse.persistence.core</artifactId>
                                            <overWrite>true</overWrite>
                                            <destFileName>org.eclipse.persistence.core.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.eclipse.persistence</groupId>
                                            <artifactId>org.eclipse.persistence.jpa</artifactId>
                                            <overWrite>true</overWrite>
                                            <destFileName>org.eclipse.persistence.jpa.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.eclipse.persistence</groupId>
                                            <artifactId>org.eclipse.persistence.jpa.jpql</artifactId>
                                            <overWrite>true</overWrite>
                                            <destFileName>org.eclipse.persistence.jpa.jpql.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.eclipse.persistence</groupId>
                                            <artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
                                            <overWrite>true</overWrite>
                                            <destFileName>org.eclipse.persistence.jpa.modelgen.processor.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.eclipse.persistence</groupId>
                                            <artifactId>org.eclipse.persistence.moxy</artifactId>
                                            <overWrite>true</overWrite>
                                            <destFileName>org.eclipse.persistence.moxy.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.eclipse.persistence</groupId>
                                            <artifactId>org.eclipse.persistence.dbws</artifactId>
                                            <overWrite>true</overWrite>
                                            <destFileName>org.eclipse.persistence.dbws.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.eclipse.persistence</groupId>
                                            <artifactId>org.eclipse.persistence.oracle</artifactId>
                                            <overWrite>true</overWrite>
                                            <destFileName>org.eclipse.persistence.oracle.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.eclipse.persistence</groupId>
                                            <artifactId>org.eclipse.persistence.asm</artifactId>
                                            <overWrite>true</overWrite>
                                            <destFileName>org.eclipse.persistence.asm.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>hibernate</id>
            <properties>
                <glassfish-artifact-id>glassfish</glassfish-artifact-id>
                <hibernate.version>7.0.0</hibernate.version>
                <jpa.provider.implementation.specific.properties>
                    hibernate.query.jpaql_strict_compliance=true:hibernate.id.new_generator_mappings=true:hibernate.cache.region.factory_class=org.hibernate.testing.cache.CachingRegionFactory:hibernate.model.generator_name_as_sequence_name=true:hibernate.jpa.compliance.transaction=true:hibernate.jpa.compliance.closed=true:hibernate.jpa.compliance.query=true:hibernate.jpa.compliance.list=true:hibernate.jpa.compliance.caching=true:hibernate.jpa.compliance.global_id_generators=true:hibernate.jpa.compliance=true:hibernate.type.wrapper_array_handling=legacy:hibernate.type.preferred_uuid_jdbc_type=char${jpa.provider.implementation.specific.additional.properties}
                </jpa.provider.implementation.specific.properties>
                <jakarta.persistence.provider>org.hibernate.jpa.HibernatePersistenceProvider</jakarta.persistence.provider>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.hibernate.orm</groupId>
                        <artifactId>hibernate-platform</artifactId>
                        <version>${hibernate.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>org.hibernate.orm</groupId>
                    <artifactId>hibernate-core</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.hibernate.orm</groupId>
                    <artifactId>hibernate-testing</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.hibernate.models</groupId>
                    <artifactId>hibernate-models</artifactId>
                </dependency>
                <dependency>
                    <groupId>io.smallrye</groupId>
                    <artifactId>jandex</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.antlr</groupId>
                    <artifactId>antlr4-runtime</artifactId>
                </dependency>
                <dependency>
                    <groupId>net.bytebuddy</groupId>
                    <artifactId>byte-buddy</artifactId>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-hibernate-lib</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${glassfish.module.dir}</outputDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.hibernate.orm</groupId>
                                            <artifactId>hibernate-core</artifactId>
                                            <overWrite>true</overWrite>
                                            <destFileName>hibernate-core.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.hibernate.orm</groupId>
                                            <artifactId>hibernate-testing</artifactId>
                                            <overWrite>true</overWrite>
                                            <destFileName>hibernate-testing.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.hibernate.models</groupId>
                                            <artifactId>hibernate-models</artifactId>
                                            <overWrite>true</overWrite>
                                            <destFileName>hibernate-models.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>io.smallrye</groupId>
                                            <artifactId>jandex</artifactId>
                                            <overWrite>true</overWrite>
                                            <destFileName>jandex.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.antlr</groupId>
                                            <artifactId>antlr4-runtime</artifactId>
                                            <overWrite>true</overWrite>
                                            <destFileName>antlr4-runtime.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>net.bytebuddy</groupId>
                                            <artifactId>byte-buddy</artifactId>
                                            <overWrite>true</overWrite>
                                            <destFileName>byte-buddy.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>db2</id>
            <properties>
                <db2.jdbc.version>11.5.9.0</db2.jdbc.version>
                <jdbc.db>db2</jdbc.db>
                <jakarta.persistence.jdbc.driver>com.ibm.db2.jcc.DB2Driver</jakarta.persistence.jdbc.driver>
                <db.delimiter>!</db.delimiter>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.ibm.db2</groupId>
                    <artifactId>jcc</artifactId>
                    <version>${db2.jdbc.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>derby</id>
            <properties>
                <derby.jdbc.version>10.15.2.0</derby.jdbc.version>
                <jdbc.db>derby</jdbc.db>
                <jakarta.persistence.jdbc.driver>org.apache.derby.jdbc.ClientDriver</jakarta.persistence.jdbc.driver>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.apache.derby</groupId>
                    <artifactId>derbyclient</artifactId>
                    <version>${derby.jdbc.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.derby</groupId>
                    <artifactId>derbytools</artifactId>
                    <version>${derby.jdbc.version}</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>stop-database-init</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${exec.asadmin}</executable>
                                    <arguments>
                                        <argument>stop-database</argument>
                                    </arguments>
                                    <successCodes>
                                        <successCode>0</successCode>
                                        <successCode>1</successCode>
                                    </successCodes>
                                </configuration>
                            </execution>
                            <execution>
                                <id>start-database</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${exec.asadmin}</executable>
                                    <arguments>
                                        <argument>start-database</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-database-final</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${exec.asadmin}</executable>
                                    <arguments>
                                        <argument>stop-database</argument>
                                    </arguments>
                                    <successCodes>
                                        <successCode>0</successCode>
                                        <successCode>1</successCode>
                                    </successCodes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install_java_procedures</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <path id="jdbc.classpath">
                                            <pathelement path="${jdbc.driver.classes}"/>
                                            <path refid="maven.runtime.classpath"/>
                                        </path>
                                        <sql autocommit="true" classpathref="jdbc.classpath" driver="${jakarta.persistence.jdbc.driver}" onerror="continue" password="${jakarta.persistence.jdbc.password}" url="${jakarta.persistence.jdbc.url}" userid="${jakarta.persistence.jdbc.user}">CALL sqlj.remove_jar('APP.dbprocedures', 0);
                                            CALL sqlj.install_jar('${project.build.directory}/dbprocedures.jar', 'APP.dbprocedures', 0);
                                            CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY('derby.database.classpath', 'APP.dbprocedures');
                                        </sql>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>mssqlserver</id>
            <properties>
                <mssqlserver.jdbc.version>12.4.2.jre11</mssqlserver.jdbc.version>
                <jdbc.db>mssqlserver</jdbc.db>
                <jakarta.persistence.jdbc.driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</jakarta.persistence.jdbc.driver>
                <db.delimiter>!</db.delimiter>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.microsoft.sqlserver</groupId>
                    <artifactId>mssql-jdbc</artifactId>
                    <version>${mssqlserver.jdbc.version}</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>mysql</id>
            <properties>
                <mysql.jdbc.version>8.2.0</mysql.jdbc.version>
                <jdbc.db>mysql</jdbc.db>
                <jakarta.persistence.jdbc.driver>com.mysql.cj.jdbc.Driver</jakarta.persistence.jdbc.driver>
                <db.delimiter>!</db.delimiter>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.mysql</groupId>
                    <artifactId>mysql-connector-j</artifactId>
                    <version>${mysql.jdbc.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>oracle</id>
            <properties>
                <oracle.jdbc.version>23.3.0.23.09</oracle.jdbc.version>
                <jdbc.db>oracle</jdbc.db>
                <jakarta.persistence.jdbc.driver>oracle.jdbc.OracleDriver</jakarta.persistence.jdbc.driver>
                <db.delimiter>!</db.delimiter>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.oracle.database.jdbc</groupId>
                    <artifactId>ojdbc11</artifactId>
                    <version>${oracle.jdbc.version}</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>postgresql</id>
            <properties>
                <postgresql.jdbc.version>42.7.4</postgresql.jdbc.version>
                <jdbc.db>postgresql</jdbc.db>
                <jakarta.persistence.jdbc.driver>org.postgresql.Driver</jakarta.persistence.jdbc.driver>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>${postgresql.jdbc.version}</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>sybase</id>
            <properties>
                <sybase.jdbc.version>1.0.0</sybase.jdbc.version>
                <jdbc.db>sybase</jdbc.db>
                <jakarta.persistence.jdbc.driver>com.sybase.jdbc4.jdbc.SybDriver</jakarta.persistence.jdbc.driver>
                <db.delimiter>!</db.delimiter>
            </properties>
            <!--
                Install with:
                mvn org.apache.maven.plugins:maven-install-plugin:3.1.1:install-file -Dfile=jconn42.jar -DgroupId=com.sybase -DartifactId=jdbc42 -Dversion=1.0.0 -Dpackaging=jar
            -->
            <dependencies>
                <dependency>
                    <groupId>com.sybase</groupId>
                    <artifactId>jdbc42</artifactId>
                    <version>${sybase.jdbc.version}</version>
                </dependency>
            </dependencies>
        </profile>


        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <exec.asadmin>${glassfish.toplevel.dir}/bin/asadmin.bat</exec.asadmin>
            </properties>
        </profile>
    </profiles>
</project>
